import os
import requests

PATCH_DIRECTORY = './patches/'

def download_patch(patch_url, patch_name):
    if patch_url == 'N/A':
        return None
    response = requests.get(patch_url)
    patch_path = os.path.join(PATCH_DIRECTORY, patch_name)
    with open(patch_path, 'wb') as file:
        file.write(response.content)
    return patch_path

def apply_patch(patch_path):
    if not patch_path or not os.path.exists(patch_path):
        return False
    # 실제 패치 적용 로직 구현 (예: 패키지 설치, 파일 교체 등)
    result = os.system(f'bash {patch_path}')
    return result == 0

def patch_vulnerabilities(vulnerabilities):
    for vulnerability in vulnerabilities:
        patch_url = vulnerability['patch_url']
        patch_name = patch_url.split('/')[-1] if patch_url != 'N/A' else vulnerability['cve_id']
        patch_path = download_patch(patch_url, patch_name)
        success = apply_patch(patch_path)
        if success:
            print(f"Patched {vulnerability['cve_id']} successfully.")
        else:
            print(f"Failed to patch {vulnerability['cve_id']}.")
